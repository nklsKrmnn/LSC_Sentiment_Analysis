notebook: Summary
nb: EDA(MR-Training, Amazon review-test, tweets-test) & nötiges Preprocessing(Feature Engineering) + Resampling
nb: Klassische Methoden
	- diverses preprocessing
	- training(Naive bayes, SVM, LR)
	- test(MR-test, Amazon, tweets) -> confusion Matrix & Classificaton Report
	- Vergleich der ACC(über mehrere Modellkombinationen und 3 Datensätze) 
LATEX: Code & vorgehen beim Training von NN
nb: BERT
	- preprocessing (Tokenize)
	- training
	- test(MR-test, Amazon, tweets) -> confusion Matrix & Classificaton Report
	- Vergleich der ACC(3 Datensätze)
nb: LSTM
	- preprocessing (Tokenize)
	- training
	- test(MR-test, Amazon, tweets) -> confusion Matrix & Classificaton Report
	- Vergleich der ACC(3 Datensätze)
nb: BOW + MLP (optional)
	- preprocessing (Tokenize)
	- training
	- test(MR-test, Amazon, tweets) -> confusion Matrix & Classificaton Report
	- Vergleich der ACC(3 Datensätze)


### Quadriga Befehle ###
ssh stud105809@quadriga.fh-wedel.de

nano Definition_File
cat Definition_File

# Dateien rüber kopieren in Quad-Ordner
scp -r <Source> stud105809@quadriga.fh-wedel.de:/home/stud105809
 -> scp -r "C:\Users\nikla\OneDrive\Desktop\LSC_Quad" stud105809@quadriga.fh-wedel.de:/home/stud105809
 -> scp -r stud105809@quadriga.fh-wedel.de:/home/stud105809/LSC_Quad "\Users\nikla\OneDrive\Desktop"
 # Datenrate limitieren und timeout verhindern bei großen Datenpaketen
 -> scp -o ServerAliveInterval=15 -o ServerAliveCountMax=200 -l 8000 stud105809@quadriga.fh-wedel.de:/home/stud105809/LSC_Sentiment_Analysis/runs/model_saves/best_model_BERT_2FC_SM_do5-bs45-adam_L1Frozen.pt "\Users\nikla\OneDrive\Desktop"

# Öffnen einer virtuellen Konsole
tmux

# Singularity image von Definition_File erzeugen:
singularity build --fakeroot <Ziel> <Source>
 -> singularity build --fakeroot lsc_image.sif Definition_File

# Container mit CPU öffnen
SINGULARITYENV_CUDA_VISIBLE_DEVICES=<cpu_id> singularity shell <Image>
 -> SINGULARITYENV_CUDA_VISIBLE_DEVICES=0 singularity shell lsc_image.sif

# File starten

# In tmux_Konsole (detach virtuelle Konsole):
STRG + b und dann d für detach

tmux ls
tmux attach -t <tmux_session_id>

# In tmux-Konsole (beendet Virtuelle Konsole):
STRG + d

# GPUs checken
nvidia-smi

# Singularity container schließen
exit

# Open Tensorboard
python -m tensorboard.main --logdir=runs/

